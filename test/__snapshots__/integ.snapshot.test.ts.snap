// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`integ snapshot validation 1`] = `
Object {
  "Outputs": Object {
    "Airflowairflowbucket1C218F9E": Object {
      "Description": "Buckent Name",
      "Export": Object {
        "Name": "AirflowBucket",
      },
      "Value": Object {
        "Ref": "AirflowAirflowBucketFED34676",
      },
    },
    "AirflowairflowwebserverpattnersLoadBalancerDNS313FB7C3": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "AirflowairflowwebserverpattnersLBFCD4C7C1",
          "DNSName",
        ],
      },
    },
    "AirflowairflowwebserverpattnersServiceURL695FD652": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "http://",
            Object {
              "Fn::GetAtt": Array [
                "AirflowairflowwebserverpattnersLBFCD4C7C1",
                "DNSName",
              ],
            },
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters00f2465b209575c44977ca8ff1c81d86d002849272ede5a8a90ac87dfff1e494ArtifactHashC2E6E6C0": Object {
      "Description": "Artifact hash for asset \\"00f2465b209575c44977ca8ff1c81d86d002849272ede5a8a90ac87dfff1e494\\"",
      "Type": "String",
    },
    "AssetParameters00f2465b209575c44977ca8ff1c81d86d002849272ede5a8a90ac87dfff1e494S3Bucket33B61C3E": Object {
      "Description": "S3 bucket for asset \\"00f2465b209575c44977ca8ff1c81d86d002849272ede5a8a90ac87dfff1e494\\"",
      "Type": "String",
    },
    "AssetParameters00f2465b209575c44977ca8ff1c81d86d002849272ede5a8a90ac87dfff1e494S3VersionKeyDE2514FF": Object {
      "Description": "S3 key for asset version \\"00f2465b209575c44977ca8ff1c81d86d002849272ede5a8a90ac87dfff1e494\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "AirflowAirflowBucketAutoDeleteObjectsCustomResource221E08A6": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AirflowAirflowBucketPolicyF2B91921",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "AirflowAirflowBucketFED34676",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "AirflowAirflowBucketFED34676": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "BucketName": "airflow-bucket-40456",
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "AirflowAirflowBucketPolicyF2B91921": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "AirflowAirflowBucketFED34676",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "AirflowAirflowBucketFED34676",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AirflowAirflowBucketFED34676",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "AirflowAirflowSchedulerServiceC7933739": Object {
      "Properties": Object {
        "Cluster": Object {
          "Ref": "AirflowairflowecsclusterBAC3AE59",
        },
        "DeploymentConfiguration": Object {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "EnableECSManagedTags": false,
        "LaunchType": "FARGATE",
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "Airflowairflowecsservicesg35979A55",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "AirflowairflowvpcairflowisolatedSubnet1Subnet46C51F35",
              },
              Object {
                "Ref": "AirflowairflowvpcairflowisolatedSubnet2Subnet197C1B2A",
              },
            ],
          },
        },
        "ServiceName": "AirflowSchedulerServiceName",
        "TaskDefinition": Object {
          "Ref": "AirflowAriflowSchedulerTaskD90A9A6F",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "AirflowAirflowTaskExecutionRoleB145ED3C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AdministratorAccess",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AirflowAirflowTaskExecutionRoleDefaultPolicy19FECDE3": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":repository/aws-cdk/assets",
                  ],
                ],
              },
            },
            Object {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "AirflowairflowwebserverlgA0693B0A",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "AirflowairflowdbcredentialsCEAB4232",
              },
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "AirflowairflowschedulerlgAB86DE70",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "Airflowairflowworkerlg81B6C925",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AirflowAirflowTaskExecutionRoleDefaultPolicy19FECDE3",
        "Roles": Array [
          Object {
            "Ref": "AirflowAirflowTaskExecutionRoleB145ED3C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AirflowAirflowTaskRoleDefaultPolicyD2B87A6C": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:ListBucket",
                "s3:GetObject",
                "s3:GetBucketLocation",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "AirflowAirflowBucketFED34676",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AirflowAirflowBucketFED34676",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "secretsmanager:GetSecretValue",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "AirflowairflowwebserverlgA0693B0A",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "AirflowairflowschedulerlgAB86DE70",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "Airflowairflowworkerlg81B6C925",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AirflowAirflowTaskRoleDefaultPolicyD2B87A6C",
        "Roles": Array [
          Object {
            "Ref": "AirflowAirflowTaskRoleEC8D7A2A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AirflowAirflowTaskRoleEC8D7A2A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AdministratorAccess",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AirflowAirflowWorkerService8B7C6836": Object {
      "Properties": Object {
        "Cluster": Object {
          "Ref": "AirflowairflowecsclusterBAC3AE59",
        },
        "DeploymentConfiguration": Object {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "EnableECSManagedTags": false,
        "LaunchType": "FARGATE",
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "Airflowairflowecsservicesg35979A55",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "AirflowairflowvpcairflowisolatedSubnet1Subnet46C51F35",
              },
              Object {
                "Ref": "AirflowairflowvpcairflowisolatedSubnet2Subnet197C1B2A",
              },
            ],
          },
        },
        "ServiceName": "AirflowWorkerServiceName",
        "TaskDefinition": Object {
          "Ref": "AirflowAriflowworkerTask0862B1B8",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "AirflowAriflowSchedulerTaskD90A9A6F": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Environment": Array [
              Object {
                "Name": "AIRFLOW_FERNET_KEY",
                "Value": "",
              },
              Object {
                "Name": "AIRFLOW_DATABASE_NAME",
                "Value": "airflowdb",
              },
              Object {
                "Name": "AIRFLOW_DATABASE_PORT_NUMBER",
                "Value": "5432",
              },
              Object {
                "Name": "AIRFLOW_DATABASE_HOST",
                "Value": Object {
                  "Fn::GetAtt": Array [
                    "AirflowairflowdbF7B6B1F7",
                    "Endpoint.Address",
                  ],
                },
              },
              Object {
                "Name": "AIRFLOW_EXECUTOR",
                "Value": "CeleryExecutor",
              },
              Object {
                "Name": "AIRFLOW_WEBSERVER_HOST",
                "Value": "webserver.airflow",
              },
              Object {
                "Name": "AIRFLOW_LOAD_EXAMPLES",
                "Value": "no",
              },
              Object {
                "Name": "AIRFLOW__SCHEDULER__DAG_DIR_LIST_INTERVAL",
                "Value": "30",
              },
              Object {
                "Name": "REDIS_HOST",
                "Value": Object {
                  "Fn::GetAtt": Array [
                    "AirflowairflowredisC733541B",
                    "RedisEndpoint.Address",
                  ],
                },
              },
              Object {
                "Name": "BUCKET_NAME",
                "Value": Object {
                  "Ref": "AirflowAirflowBucketFED34676",
                },
              },
            ],
            "Essential": true,
            "Image": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::AccountId",
                  },
                  ".dkr.ecr.",
                  Object {
                    "Ref": "AWS::Region",
                  },
                  ".",
                  Object {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/aws-cdk/assets:230b043d436266e4c2efd3901a153db7285a24ce76f2fdfd267c38c0dd2a611e",
                ],
              ],
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AirflowairflowschedulerlgAB86DE70",
                },
                "awslogs-region": Object {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "ecs",
              },
            },
            "Name": "airflow-scheduler-container",
            "Secrets": Array [
              Object {
                "Name": "AIRFLOW_DATABASE_USERNAME",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "AirflowairflowdbcredentialsCEAB4232",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "AIRFLOW_DATABASE_PASSWORD",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "AirflowairflowdbcredentialsCEAB4232",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "512",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "AirflowAirflowTaskExecutionRoleB145ED3C",
            "Arn",
          ],
        },
        "Family": "airflow-scheduler",
        "Memory": "2048",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "AirflowAirflowTaskRoleEC8D7A2A",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "AirflowAriflowworkerTask0862B1B8": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Environment": Array [
              Object {
                "Name": "AIRFLOW_FERNET_KEY",
                "Value": "",
              },
              Object {
                "Name": "AIRFLOW_DATABASE_NAME",
                "Value": "airflowdb",
              },
              Object {
                "Name": "AIRFLOW_DATABASE_PORT_NUMBER",
                "Value": "5432",
              },
              Object {
                "Name": "AIRFLOW_DATABASE_HOST",
                "Value": Object {
                  "Fn::GetAtt": Array [
                    "AirflowairflowdbF7B6B1F7",
                    "Endpoint.Address",
                  ],
                },
              },
              Object {
                "Name": "AIRFLOW_EXECUTOR",
                "Value": "CeleryExecutor",
              },
              Object {
                "Name": "AIRFLOW_WEBSERVER_HOST",
                "Value": "webserver.airflow",
              },
              Object {
                "Name": "AIRFLOW_LOAD_EXAMPLES",
                "Value": "no",
              },
              Object {
                "Name": "AIRFLOW__SCHEDULER__DAG_DIR_LIST_INTERVAL",
                "Value": "30",
              },
              Object {
                "Name": "REDIS_HOST",
                "Value": Object {
                  "Fn::GetAtt": Array [
                    "AirflowairflowredisC733541B",
                    "RedisEndpoint.Address",
                  ],
                },
              },
              Object {
                "Name": "BUCKET_NAME",
                "Value": Object {
                  "Ref": "AirflowAirflowBucketFED34676",
                },
              },
            ],
            "Essential": true,
            "Image": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::AccountId",
                  },
                  ".dkr.ecr.",
                  Object {
                    "Ref": "AWS::Region",
                  },
                  ".",
                  Object {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/aws-cdk/assets:459965263636bdee137ae544839fb1162bf1ccda0b76855d980536c8b0bf5919",
                ],
              ],
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "Airflowairflowworkerlg81B6C925",
                },
                "awslogs-region": Object {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "ecs",
              },
            },
            "Name": "airflow-worker-container",
            "PortMappings": Array [
              Object {
                "ContainerPort": 8793,
                "Protocol": "tcp",
              },
            ],
            "Secrets": Array [
              Object {
                "Name": "AIRFLOW_DATABASE_USERNAME",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "AirflowairflowdbcredentialsCEAB4232",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "AIRFLOW_DATABASE_PASSWORD",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "AirflowairflowdbcredentialsCEAB4232",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "1024",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "AirflowAirflowTaskExecutionRoleB145ED3C",
            "Arn",
          ],
        },
        "Family": "airflow-worker",
        "Memory": "3072",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "AirflowAirflowTaskRoleEC8D7A2A",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "Airflowairflowdatabasesg4B0E4C4F": Object {
      "Properties": Object {
        "GroupDescription": "airflow-stack/Airflow/airflow-database-sg",
        "GroupName": "airflow-database-sg",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "Airflowairflowvpc1CE77769",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AirflowairflowdatabasesgfromairflowstackAirflowairflowecsservicesgD581DA47543278DD6A99": Object {
      "Properties": Object {
        "Description": "Allow ECS Cluster to access Database",
        "FromPort": 5432,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "Airflowairflowdatabasesg4B0E4C4F",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "Airflowairflowecsservicesg35979A55",
            "GroupId",
          ],
        },
        "ToPort": 5432,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "AirflowairflowdbF7B6B1F7": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AllocatedStorage": "20",
        "CopyTagsToSnapshot": true,
        "DBInstanceClass": "db.t3.micro",
        "DBInstanceIdentifier": "airflow-db",
        "DBName": "airflowdb",
        "DBParameterGroupName": "default.postgres9.6",
        "DBSubnetGroupName": Object {
          "Ref": "AirflowairflowdbSubnetGroupC2607B00",
        },
        "DeletionProtection": false,
        "Engine": "postgres",
        "EngineVersion": "9.6.18",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "AirflowairflowdbcredentialsCEAB4232",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "AirflowairflowdbcredentialsCEAB4232",
              },
              ":SecretString:username::}}",
            ],
          ],
        },
        "Port": "5432",
        "PubliclyAccessible": false,
        "StorageType": "gp2",
        "VPCSecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "Airflowairflowdatabasesg4B0E4C4F",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "AirflowairflowdbSubnetGroupC2607B00": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnet group for airflow-db database",
        "SubnetIds": Array [
          Object {
            "Ref": "AirflowairflowvpcairflowisolatedSubnet1Subnet46C51F35",
          },
          Object {
            "Ref": "AirflowairflowvpcairflowisolatedSubnet2Subnet197C1B2A",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "AirflowairflowdbcredentialsAttachment8E105E22": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "AirflowairflowdbcredentialsCEAB4232",
        },
        "TargetId": Object {
          "Ref": "AirflowairflowdbF7B6B1F7",
        },
        "TargetType": "AWS::RDS::DBInstance",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "AirflowairflowdbcredentialsCEAB4232": Object {
      "Properties": Object {
        "GenerateSecretString": Object {
          "ExcludeCharacters": "\\"@/",
          "ExcludePunctuation": true,
          "GenerateStringKey": "password",
          "PasswordLength": 16,
          "SecretStringTemplate": "{\\"username\\":\\"airfflow\\"}",
        },
        "Name": "airflow-db-credentials",
      },
      "Type": "AWS::SecretsManager::Secret",
    },
    "AirflowairflowecsclusterBAC3AE59": Object {
      "Properties": Object {
        "ClusterName": "AirflowECSCluster",
        "ClusterSettings": Array [
          Object {
            "Name": "containerInsights",
            "Value": "enabled",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "Airflowairflowecsservicesg35979A55": Object {
      "Properties": Object {
        "GroupDescription": "airflow-stack/Airflow/airflow-ecsservice-sg",
        "GroupName": "airflow-ecsservice-sg",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "Airflowairflowvpc1CE77769",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AirflowairflowecsservicesgfromairflowstackAirflowairflowecsservicesgD581DA4780800432BE5E": Object {
      "Properties": Object {
        "Description": "Allow airflow scheduler/worker can connect to webserver",
        "FromPort": 8080,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "Airflowairflowecsservicesg35979A55",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "Airflowairflowecsservicesg35979A55",
            "GroupId",
          ],
        },
        "ToPort": 8080,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "AirflowairflowecsservicesgfromairflowstackAirflowairflowwebserverpattnersLBSecurityGroup3F6818CA8080B8A350CF": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "FromPort": 8080,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "Airflowairflowecsservicesg35979A55",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "AirflowairflowwebserverpattnersLBSecurityGroup3CD2169F",
            "GroupId",
          ],
        },
        "ToPort": 8080,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "AirflowairflowredisC733541B": Object {
      "Properties": Object {
        "CacheNodeType": "cache.t2.small",
        "CacheSubnetGroupName": Object {
          "Ref": "Airflowredissubnets187F2097",
        },
        "ClusterName": "airflowredis",
        "Engine": "redis",
        "NumCacheNodes": 1,
        "Port": 6379,
        "VpcSecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "Airflowairflowredissg32D8F648",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::ElastiCache::CacheCluster",
    },
    "Airflowairflowredissg32D8F648": Object {
      "Properties": Object {
        "GroupDescription": "airflow-stack/Airflow/airflow-redis-sg",
        "GroupName": "airflow-redis-sg",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "Airflowairflowvpc1CE77769",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AirflowairflowredissgfromairflowstackAirflowairflowecsservicesgD581DA47637927E10DB3": Object {
      "Properties": Object {
        "Description": "Allow ECS Cluster to access Redis",
        "FromPort": 6379,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "Airflowairflowredissg32D8F648",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "Airflowairflowecsservicesg35979A55",
            "GroupId",
          ],
        },
        "ToPort": 6379,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "AirflowairflowschedulerlgAB86DE70": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "LogGroupName": "/ecs/airflow-scheduler",
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "Airflowairflowvpc1CE77769": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "airflow-stack/Airflow/airflow-vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "AirflowairflowvpcIGWA57F90D3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "airflow-stack/Airflow/airflow-vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "AirflowairflowvpcVPCGW4A336180": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "AirflowairflowvpcIGWA57F90D3",
        },
        "VpcId": Object {
          "Ref": "Airflowairflowvpc1CE77769",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "AirflowairflowvpcairflowisolatedSubnet1RouteTableAssociationA9AB0331": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "AirflowairflowvpcairflowisolatedSubnet1RouteTableD2FA5359",
        },
        "SubnetId": Object {
          "Ref": "AirflowairflowvpcairflowisolatedSubnet1Subnet46C51F35",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "AirflowairflowvpcairflowisolatedSubnet1RouteTableD2FA5359": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "isolated-subnet-",
                  Object {
                    "Fn::Select": Array [
                      0,
                      Object {
                        "Fn::GetAZs": "",
                      },
                    ],
                  },
                  "-airflow",
                ],
              ],
            },
          },
        ],
        "VpcId": Object {
          "Ref": "Airflowairflowvpc1CE77769",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "AirflowairflowvpcairflowisolatedSubnet1Subnet46C51F35": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.2.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "airflow-isolated",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "isolated-subnet-",
                  Object {
                    "Fn::Select": Array [
                      0,
                      Object {
                        "Fn::GetAZs": "",
                      },
                    ],
                  },
                  "-airflow",
                ],
              ],
            },
          },
        ],
        "VpcId": Object {
          "Ref": "Airflowairflowvpc1CE77769",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "AirflowairflowvpcairflowisolatedSubnet2RouteTable62E7A5BC": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "isolated-subnet-",
                  Object {
                    "Fn::Select": Array [
                      1,
                      Object {
                        "Fn::GetAZs": "",
                      },
                    ],
                  },
                  "-airflow",
                ],
              ],
            },
          },
        ],
        "VpcId": Object {
          "Ref": "Airflowairflowvpc1CE77769",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "AirflowairflowvpcairflowisolatedSubnet2RouteTableAssociation38822D7B": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "AirflowairflowvpcairflowisolatedSubnet2RouteTable62E7A5BC",
        },
        "SubnetId": Object {
          "Ref": "AirflowairflowvpcairflowisolatedSubnet2Subnet197C1B2A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "AirflowairflowvpcairflowisolatedSubnet2Subnet197C1B2A": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.3.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "airflow-isolated",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "isolated-subnet-",
                  Object {
                    "Fn::Select": Array [
                      1,
                      Object {
                        "Fn::GetAZs": "",
                      },
                    ],
                  },
                  "-airflow",
                ],
              ],
            },
          },
        ],
        "VpcId": Object {
          "Ref": "Airflowairflowvpc1CE77769",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "AirflowairflowvpcairflowpublicSubnet1DefaultRoute78C12256": Object {
      "DependsOn": Array [
        "AirflowairflowvpcVPCGW4A336180",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "AirflowairflowvpcIGWA57F90D3",
        },
        "RouteTableId": Object {
          "Ref": "AirflowairflowvpcairflowpublicSubnet1RouteTable5B402E93",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "AirflowairflowvpcairflowpublicSubnet1RouteTable5B402E93": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "public-subnet-",
                  Object {
                    "Fn::Select": Array [
                      0,
                      Object {
                        "Fn::GetAZs": "",
                      },
                    ],
                  },
                  "-airflow",
                ],
              ],
            },
          },
        ],
        "VpcId": Object {
          "Ref": "Airflowairflowvpc1CE77769",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "AirflowairflowvpcairflowpublicSubnet1RouteTableAssociationA8C55F21": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "AirflowairflowvpcairflowpublicSubnet1RouteTable5B402E93",
        },
        "SubnetId": Object {
          "Ref": "AirflowairflowvpcairflowpublicSubnet1Subnet53CCDD2D",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "AirflowairflowvpcairflowpublicSubnet1Subnet53CCDD2D": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "airflow-public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "public-subnet-",
                  Object {
                    "Fn::Select": Array [
                      0,
                      Object {
                        "Fn::GetAZs": "",
                      },
                    ],
                  },
                  "-airflow",
                ],
              ],
            },
          },
        ],
        "VpcId": Object {
          "Ref": "Airflowairflowvpc1CE77769",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "AirflowairflowvpcairflowpublicSubnet2DefaultRoute06C42A39": Object {
      "DependsOn": Array [
        "AirflowairflowvpcVPCGW4A336180",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "AirflowairflowvpcIGWA57F90D3",
        },
        "RouteTableId": Object {
          "Ref": "AirflowairflowvpcairflowpublicSubnet2RouteTable2E73F297",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "AirflowairflowvpcairflowpublicSubnet2RouteTable2E73F297": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "public-subnet-",
                  Object {
                    "Fn::Select": Array [
                      1,
                      Object {
                        "Fn::GetAZs": "",
                      },
                    ],
                  },
                  "-airflow",
                ],
              ],
            },
          },
        ],
        "VpcId": Object {
          "Ref": "Airflowairflowvpc1CE77769",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "AirflowairflowvpcairflowpublicSubnet2RouteTableAssociationB898E805": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "AirflowairflowvpcairflowpublicSubnet2RouteTable2E73F297",
        },
        "SubnetId": Object {
          "Ref": "AirflowairflowvpcairflowpublicSubnet2Subnet16BBFBB1",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "AirflowairflowvpcairflowpublicSubnet2Subnet16BBFBB1": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "airflow-public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "public-subnet-",
                  Object {
                    "Fn::Select": Array [
                      1,
                      Object {
                        "Fn::GetAZs": "",
                      },
                    ],
                  },
                  "-airflow",
                ],
              ],
            },
          },
        ],
        "VpcId": Object {
          "Ref": "Airflowairflowvpc1CE77769",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "AirflowairflowvpccloudwatchlogsendpointCE76806B": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "AirflowvpcendpointsgD8C9CCDF",
              "GroupId",
            ],
          },
        ],
        "ServiceName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "com.amazonaws.",
              Object {
                "Ref": "AWS::Region",
              },
              ".logs",
            ],
          ],
        },
        "SubnetIds": Array [
          Object {
            "Ref": "AirflowairflowvpcairflowisolatedSubnet1Subnet46C51F35",
          },
          Object {
            "Ref": "AirflowairflowvpcairflowisolatedSubnet2Subnet197C1B2A",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Airflowairflowvpc1CE77769",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "AirflowairflowvpcecrdockerendpointDBD4D8B2": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "AirflowvpcendpointsgD8C9CCDF",
              "GroupId",
            ],
          },
        ],
        "ServiceName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "com.amazonaws.",
              Object {
                "Ref": "AWS::Region",
              },
              ".ecr.dkr",
            ],
          ],
        },
        "SubnetIds": Array [
          Object {
            "Ref": "AirflowairflowvpcairflowisolatedSubnet1Subnet46C51F35",
          },
          Object {
            "Ref": "AirflowairflowvpcairflowisolatedSubnet2Subnet197C1B2A",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Airflowairflowvpc1CE77769",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "AirflowairflowvpcecrendpointC69BF8B7": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "AirflowvpcendpointsgD8C9CCDF",
              "GroupId",
            ],
          },
        ],
        "ServiceName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "com.amazonaws.",
              Object {
                "Ref": "AWS::Region",
              },
              ".ecr.api",
            ],
          ],
        },
        "SubnetIds": Array [
          Object {
            "Ref": "AirflowairflowvpcairflowisolatedSubnet1Subnet46C51F35",
          },
          Object {
            "Ref": "AirflowairflowvpcairflowisolatedSubnet2Subnet197C1B2A",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Airflowairflowvpc1CE77769",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "AirflowairflowvpcecsendpointF4092C87": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "AirflowvpcendpointsgD8C9CCDF",
              "GroupId",
            ],
          },
        ],
        "ServiceName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "com.amazonaws.",
              Object {
                "Ref": "AWS::Region",
              },
              ".ecs",
            ],
          ],
        },
        "SubnetIds": Array [
          Object {
            "Ref": "AirflowairflowvpcairflowisolatedSubnet1Subnet46C51F35",
          },
          Object {
            "Ref": "AirflowairflowvpcairflowisolatedSubnet2Subnet197C1B2A",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Airflowairflowvpc1CE77769",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "Airflowairflowvpcs3endpoint1BE658BA": Object {
      "Properties": Object {
        "RouteTableIds": Array [
          Object {
            "Ref": "AirflowairflowvpcairflowisolatedSubnet1RouteTableD2FA5359",
          },
          Object {
            "Ref": "AirflowairflowvpcairflowisolatedSubnet2RouteTable62E7A5BC",
          },
        ],
        "ServiceName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "com.amazonaws.",
              Object {
                "Ref": "AWS::Region",
              },
              ".s3",
            ],
          ],
        },
        "VpcEndpointType": "Gateway",
        "VpcId": Object {
          "Ref": "Airflowairflowvpc1CE77769",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "Airflowairflowvpcsecretsmanagerendpoint3A04F720": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "AirflowvpcendpointsgD8C9CCDF",
              "GroupId",
            ],
          },
        ],
        "ServiceName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "com.amazonaws.",
              Object {
                "Ref": "AWS::Region",
              },
              ".secretsmanager",
            ],
          ],
        },
        "SubnetIds": Array [
          Object {
            "Ref": "AirflowairflowvpcairflowisolatedSubnet1Subnet46C51F35",
          },
          Object {
            "Ref": "AirflowairflowvpcairflowisolatedSubnet2Subnet197C1B2A",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Airflowairflowvpc1CE77769",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "AirflowairflowwebserverlgA0693B0A": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "LogGroupName": "/ecs/airflow-webserver",
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "AirflowairflowwebserverpattnersLBFCD4C7C1": Object {
      "DependsOn": Array [
        "AirflowairflowvpcairflowpublicSubnet1DefaultRoute78C12256",
        "AirflowairflowvpcairflowpublicSubnet2DefaultRoute06C42A39",
      ],
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Name": "Airflow-Webserver-LB",
        "Scheme": "internet-facing",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "AirflowairflowwebserverpattnersLBSecurityGroup3CD2169F",
              "GroupId",
            ],
          },
        ],
        "Subnets": Array [
          Object {
            "Ref": "AirflowairflowvpcairflowpublicSubnet1Subnet53CCDD2D",
          },
          Object {
            "Ref": "AirflowairflowvpcairflowpublicSubnet2Subnet16BBFBB1",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "AirflowairflowwebserverpattnersLBPublicListenerD1698BFD": Object {
      "Properties": Object {
        "DefaultActions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "AirflowairflowwebserverpattnersLBPublicListenerECSGroup39CE374A",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "AirflowairflowwebserverpattnersLBFCD4C7C1",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "AirflowairflowwebserverpattnersLBPublicListenerECSGroup39CE374A": Object {
      "Properties": Object {
        "HealthCheckIntervalSeconds": 60,
        "HealthCheckPath": "/health",
        "HealthCheckTimeoutSeconds": 20,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetType": "ip",
        "VpcId": Object {
          "Ref": "Airflowairflowvpc1CE77769",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "AirflowairflowwebserverpattnersLBSecurityGroup3CD2169F": Object {
      "Properties": Object {
        "GroupDescription": "Automatically created Security Group for ELB airflowstackAirflowairflowwebserverpattnersLB62AD7751",
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "VpcId": Object {
          "Ref": "Airflowairflowvpc1CE77769",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AirflowairflowwebserverpattnersLBSecurityGrouptoairflowstackAirflowairflowecsservicesgD581DA47808020A5FAFF": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "Airflowairflowecsservicesg35979A55",
            "GroupId",
          ],
        },
        "FromPort": 8080,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "AirflowairflowwebserverpattnersLBSecurityGroup3CD2169F",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 8080,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "AirflowairflowwebserverpattnersService61AEB576": Object {
      "DependsOn": Array [
        "AirflowairflowwebserverpattnersLBPublicListenerECSGroup39CE374A",
        "AirflowairflowwebserverpattnersLBPublicListenerD1698BFD",
      ],
      "Properties": Object {
        "Cluster": Object {
          "Ref": "AirflowairflowecsclusterBAC3AE59",
        },
        "DeploymentConfiguration": Object {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": Array [
          Object {
            "ContainerName": "web",
            "ContainerPort": 8080,
            "TargetGroupArn": Object {
              "Ref": "AirflowairflowwebserverpattnersLBPublicListenerECSGroup39CE374A",
            },
          },
        ],
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "Airflowairflowecsservicesg35979A55",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "AirflowairflowvpcairflowisolatedSubnet1Subnet46C51F35",
              },
              Object {
                "Ref": "AirflowairflowvpcairflowisolatedSubnet2Subnet197C1B2A",
              },
            ],
          },
        },
        "ServiceName": "AirflowWebserverServiceName",
        "ServiceRegistries": Array [
          Object {
            "RegistryArn": Object {
              "Fn::GetAtt": Array [
                "AirflowairflowwebserverpattnersServiceCloudmapServiceFFE711FB",
                "Arn",
              ],
            },
          },
        ],
        "TaskDefinition": Object {
          "Ref": "AirflowairflowwebserverpattnersTaskDef3A8DA9B3",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "AirflowairflowwebserverpattnersServiceCloudmapServiceFFE711FB": Object {
      "Properties": Object {
        "DnsConfig": Object {
          "DnsRecords": Array [
            Object {
              "TTL": 30,
              "Type": "A",
            },
          ],
          "NamespaceId": Object {
            "Fn::GetAtt": Array [
              "Airflowwebserverdnsnamespace291B22DD",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "HealthCheckCustomConfig": Object {
          "FailureThreshold": 1,
        },
        "Name": "webserver",
        "NamespaceId": Object {
          "Fn::GetAtt": Array [
            "Airflowwebserverdnsnamespace291B22DD",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "AirflowairflowwebserverpattnersTaskDef3A8DA9B3": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Environment": Array [
              Object {
                "Name": "AIRFLOW_FERNET_KEY",
                "Value": "",
              },
              Object {
                "Name": "AIRFLOW_DATABASE_NAME",
                "Value": "airflowdb",
              },
              Object {
                "Name": "AIRFLOW_DATABASE_PORT_NUMBER",
                "Value": "5432",
              },
              Object {
                "Name": "AIRFLOW_DATABASE_HOST",
                "Value": Object {
                  "Fn::GetAtt": Array [
                    "AirflowairflowdbF7B6B1F7",
                    "Endpoint.Address",
                  ],
                },
              },
              Object {
                "Name": "AIRFLOW_EXECUTOR",
                "Value": "CeleryExecutor",
              },
              Object {
                "Name": "AIRFLOW_LOAD_EXAMPLES",
                "Value": "no",
              },
              Object {
                "Name": "AIRFLOW__SCHEDULER__DAG_DIR_LIST_INTERVAL",
                "Value": "30",
              },
              Object {
                "Name": "BUCKET_NAME",
                "Value": Object {
                  "Ref": "AirflowAirflowBucketFED34676",
                },
              },
            ],
            "Essential": true,
            "Image": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::AccountId",
                  },
                  ".dkr.ecr.",
                  Object {
                    "Ref": "AWS::Region",
                  },
                  ".",
                  Object {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/aws-cdk/assets:1827ff796bfc0d87122614a3c53a70815450b83b3f442cc98b015ac6add67f6f",
                ],
              ],
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AirflowairflowwebserverlgA0693B0A",
                },
                "awslogs-region": Object {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "ecs",
              },
            },
            "Name": "web",
            "PortMappings": Array [
              Object {
                "ContainerPort": 8080,
                "Protocol": "tcp",
              },
            ],
            "Secrets": Array [
              Object {
                "Name": "AIRFLOW_DATABASE_USERNAME",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "AirflowairflowdbcredentialsCEAB4232",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "AIRFLOW_DATABASE_PASSWORD",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "AirflowairflowdbcredentialsCEAB4232",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "512",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "AirflowAirflowTaskExecutionRoleB145ED3C",
            "Arn",
          ],
        },
        "Family": "airflow-webserver-pattners",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "AirflowAirflowTaskRoleEC8D7A2A",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "Airflowairflowworkerlg81B6C925": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "LogGroupName": "/ecs/airflow-worker",
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "Airflowredissubnets187F2097": Object {
      "Properties": Object {
        "Description": "Airflow Redis isolated subnet group",
        "SubnetIds": Array [
          Object {
            "Ref": "AirflowairflowvpcairflowisolatedSubnet1Subnet46C51F35",
          },
          Object {
            "Ref": "AirflowairflowvpcairflowisolatedSubnet2Subnet197C1B2A",
          },
        ],
      },
      "Type": "AWS::ElastiCache::SubnetGroup",
    },
    "AirflowvpcendpointsgD8C9CCDF": Object {
      "Properties": Object {
        "GroupDescription": "airflow-stack/Airflow/vpcendpoint-sg",
        "GroupName": "vpcendpoint-sg",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "10.0.0.0/16",
            "Description": "Allow ECS Cluster to access VPC Endpoints",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "Airflowairflowvpc1CE77769",
                "CidrBlock",
              ],
            },
            "Description": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "from ",
                  Object {
                    "Fn::GetAtt": Array [
                      "Airflowairflowvpc1CE77769",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "VpcId": Object {
          "Ref": "Airflowairflowvpc1CE77769",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "Airflowwebserverdnsnamespace291B22DD": Object {
      "Properties": Object {
        "Name": "airflow",
        "Vpc": Object {
          "Ref": "Airflowairflowvpc1CE77769",
        },
      },
      "Type": "AWS::ServiceDiscovery::PrivateDnsNamespace",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": Object {
      "DependsOn": Array [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters00f2465b209575c44977ca8ff1c81d86d002849272ede5a8a90ac87dfff1e494S3Bucket33B61C3E",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters00f2465b209575c44977ca8ff1c81d86d002849272ede5a8a90ac87dfff1e494S3VersionKeyDE2514FF",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters00f2465b209575c44977ca8ff1c81d86d002849272ede5a8a90ac87dfff1e494S3VersionKeyDE2514FF",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Lambda function for auto-deleting objects in ",
              Object {
                "Ref": "AirflowAirflowBucketFED34676",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;
